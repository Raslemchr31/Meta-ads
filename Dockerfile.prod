# Multi-stage build for production-ready Meta Ads Intelligence Platform Frontend
# Base image with security hardening
FROM node:18-alpine AS base

# Install security updates and necessary packages
RUN apk update && apk upgrade && \
    apk add --no-cache \
    libc6-compat \
    dumb-init \
    curl \
    ca-certificates \
    && rm -rf /var/cache/apk/* \
    && addgroup -g 1001 -S nodejs \
    && adduser -S frontend -u 1001 -G nodejs

WORKDIR /app

# Dependencies stage
FROM base AS deps

# Copy package files
COPY package*.json ./

# Install dependencies with security audit
RUN npm ci --no-audit --no-fund && \
    npm cache clean --force

# Build stage
FROM base AS build
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Set build-time environment variables for security
ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_ENV=production

# Build Next.js application with optimizations
RUN npm run build && \
    rm -rf node_modules src && \
    npm ci --only=production --no-audit --no-fund

# Production stage with Nginx
FROM nginx:1.25-alpine AS production

# Install security updates
RUN apk update && apk upgrade && \
    apk add --no-cache \
    dumb-init \
    curl \
    ca-certificates \
    && rm -rf /var/cache/apk/*

# Create non-root user for Nginx
RUN addgroup -g 1001 -S nginx-user && \
    adduser -S frontend -u 1001 -G nginx-user

# Copy custom Nginx configuration
COPY --from=build /app/nginx.conf /etc/nginx/nginx.conf

# Copy built Next.js static files
COPY --from=build --chown=frontend:nginx-user /app/.next/static /usr/share/nginx/html/_next/static
COPY --from=build --chown=frontend:nginx-user /app/public /usr/share/nginx/html

# Create necessary directories with proper permissions
RUN mkdir -p /var/log/nginx /var/cache/nginx /tmp/nginx && \
    touch /var/run/nginx.pid && \
    chown -R frontend:nginx-user /var/log/nginx /var/cache/nginx /tmp/nginx /var/run/nginx.pid /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# Remove default Nginx files and unnecessary packages
RUN rm -rf /etc/nginx/conf.d/default.conf \
           /usr/share/nginx/html/index.html \
           /tmp/* /var/tmp/*

# Switch to non-root user
USER frontend

# Expose port (non-privileged)
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]

# Security labels
LABEL maintainer="Meta Ads Intelligence Platform" \
      version="1.0.0" \
      description="Production-ready Meta Ads Intelligence Platform Frontend" \
      security.scan="enabled" \
      security.non-root-user="frontend"

# Alternative: Next.js standalone mode (if preferred over Nginx)
FROM base AS nextjs-standalone
COPY --from=build --chown=frontend:nodejs /app/.next/standalone ./
COPY --from=build --chown=frontend:nodejs /app/.next/static ./.next/static
COPY --from=build --chown=frontend:nodejs /app/public ./public

# Create logs directory
RUN mkdir -p /app/logs && \
    chown -R frontend:nodejs /app && \
    chmod -R 755 /app && \
    chmod -R 700 /app/logs

USER frontend
EXPOSE 3000

HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:3000/api/health || exit 1

ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "server.js"]